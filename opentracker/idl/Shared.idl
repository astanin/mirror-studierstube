/*
shared implements CORBA-based data distribution for Coin3D
Copyright (C) 2006 Gerhard Reitmayr, Joseph Newman

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
*/

#ifndef _SHARED_IDL
#define _SHARED_IDL

// OpenTracker specific pragma to insert extra includes into the stub header.
#pragma hh #include <OpenTracker/skeletons/OT_sysdep.h>

#include <CosEventComm.idl>

module Shared {

    typedef sequence<string> EntityList;

    interface Group {
        void addEntity( in string thing, in long index );
        void deleteEntityByIndex( in long index );
        EntityList listEntities();
    };

    struct AddedEntity {
        CosEventComm::PushSupplier supplier;
        string thing;
        long index;
    };

    struct RemovedEntity {
        CosEventComm::PushSupplier supplier;
        long index;
    };

    struct ClearGroup {
        CosEventComm::PushSupplier supplier;
    };

    struct FieldUpdate {
        CosEventComm::PushSupplier supplier;
        sequence<string> value;
    };

    struct NamedFieldUpdate {
        CosEventComm::PushSupplier supplier;
        string name;
        sequence<string> value;
    };

    struct NodeUpdate {
        CosEventComm::PushSupplier supplier;
        sequence<string> name;
        sequence<string> value;
    };

    struct ImageUpdate {
        CosEventComm::PushSupplier supplier;
        short width;
        short height;
        short type;
        sequence<octet> value;
    };
};

#endif //_SHARED_IDL